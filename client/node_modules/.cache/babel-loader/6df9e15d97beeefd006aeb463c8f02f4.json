{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Weather/Weather.js\";\nimport React from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Weather = _ref => {\n  let {\n    weather\n  } = _ref;\n\n  const getCountryWeather = () => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays/weather',\n      params: {\n        lon: longitude,\n        lat: latitude\n      }\n    };\n    axios.request(options).then(response => {\n      const countryWeather = {\n        maxTemp: parseInt(response.data.main.temp_max - 273.15),\n        minTemp: parseInt(response.data.main.temp_min - 273.15),\n        humidity: response.data.main.humidity,\n        sky: response.data.weather[0].main\n      };\n      setWeather(countryWeather);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"weather\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"weather__title\",\n      children: \"Current Weather:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"min. Temp: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [weather.minTemp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"max. Temp: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [weather.maxTemp, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"humidity: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [weather.humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"sky: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: weather.sky\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Weather;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Weather/Weather.js"],"names":["React","Weather","weather","getCountryWeather","options","method","url","params","lon","longitude","lat","latitude","axios","request","then","response","countryWeather","maxTemp","parseInt","data","main","temp_max","minTemp","temp_min","humidity","sky","setWeather","catch","error","console"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAEA,MAAMC,OAAO,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;;AAC/B,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,wCAFO;AAGZC,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAAEC,SAAN;AAAiBC,QAAAA,GAAG,EAAEC;AAAtB;AAHI,KAAhB;AAKAC,IAAAA,KAAK,CAACC,OAAN,CAAcT,OAAd,EACCU,IADD,CACOC,QAAD,IAAc;AAClB,YAAMC,cAAc,GAAG;AACrBC,QAAAA,OAAO,EAAEC,QAAQ,CAACH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBC,QAAnB,GAA8B,MAA/B,CADI;AAErBC,QAAAA,OAAO,EAAEJ,QAAQ,CAACH,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBG,QAAnB,GAA6B,MAA9B,CAFI;AAGrBC,QAAAA,QAAQ,EAAET,QAAQ,CAACI,IAAT,CAAcC,IAAd,CAAmBI,QAHR;AAIrBC,QAAAA,GAAG,EAAEV,QAAQ,CAACI,IAAT,CAAcjB,OAAd,CAAsB,CAAtB,EAAyBkB;AAJT,OAAvB;AAMAM,MAAAA,UAAU,CAACV,cAAD,CAAV;AACD,KATD,EAUCW,KAVD,CAUQC,KAAD,IAAW;AAACC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAAqB,KAVxC;AAWD,GAjBD;;AAkBA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6CAAc;AAAA,mBAAO1B,OAAO,CAACoB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6CAAc;AAAA,mBAAOpB,OAAO,CAACe,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,4CAAa;AAAA,mBAAOf,OAAO,CAACsB,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,uCAAQ;AAAA,kBAAOtB,OAAO,CAACuB;AAAf;AAAA;AAAA;AAAA;AAAA,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5BD;;KAAMxB,O;AA8BN,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport './Weather.css';\n\nconst Weather = ({ weather }) => {\n  const getCountryWeather = () => {\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays/weather',\n        params: {lon: longitude, lat: latitude},\n    }\n    axios.request(options)\n    .then((response) => {\n      const countryWeather = {\n        maxTemp: parseInt(response.data.main.temp_max - 273.15),\n        minTemp: parseInt(response.data.main.temp_min -273.15),\n        humidity: response.data.main.humidity,\n        sky: response.data.weather[0].main,\n      }\n      setWeather(countryWeather);\n    })\n    .catch((error) => {console.error(error)})\n  }\n  return (\n    <section className='weather'>\n      <h2 className='weather__title'>Current Weather:</h2>\n      <p>min. Temp: <span>{weather.minTemp} °C</span></p>\n      <p>max. Temp: <span>{weather.maxTemp} °C</span></p>\n      <p>humidity: <span>{weather.humidity} %</span></p>\n      <p>sky: <span>{weather.sky}</span></p>\n  </section>\n  )\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}
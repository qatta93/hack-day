{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Holidays.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Gallery from './Gallery/index';\nimport Weather from './Weather/index';\nimport './Holidays.css';\nimport heart from '../img/heart.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst countryList = require('country-list');\n\nconst Holidays = () => {\n  _s();\n\n  const [country, setCountry] = useState('');\n  const [gallery, setGallery] = useState([]);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [weather, setWeather] = useState({});\n  const [btnTitle, setBtnTitle] = useState('TAKE ME THERE !');\n\n  const randomIntNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const generateRandomCountry = e => {\n    e.preventDefault();\n\n    if (btnTitle === 'TAKE ME THERE !') {\n      setBtnTitle('TRY AGAIN !');\n    }\n\n    const randomInt = randomIntNumber(1, 150);\n    const randomCountry = countryList.getData()[randomInt].name;\n    setCountry(randomCountry);\n  };\n\n  const getGallery = () => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays/gallery',\n      params: {\n        country: country\n      }\n    };\n    axios.request(options).then(response => {\n      const link = response.data;\n      setGallery(link);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const getCountryData = () => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays',\n      params: {\n        country: country\n      }\n    };\n    axios.request(options).then(response => {\n      const {\n        lon\n      } = response.data;\n      const {\n        lat\n      } = response.data;\n      setLongitude(lon);\n      setLatitude(lat);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const getCountryWeather = () => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays/weather',\n      params: {\n        lon: longitude,\n        lat: latitude\n      }\n    };\n    axios.request(options).then(response => {\n      const countryWeather = {\n        maxTemp: parseInt(response.data.main.temp_max - 273.15),\n        minTemp: parseInt(response.data.main.temp_min - 273.15),\n        humidity: response.data.main.humidity,\n        sky: response.data.weather[0].main\n      };\n      setWeather(countryWeather);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    getCountryData();\n    getGallery();\n    getCountryWeather();\n  }, [country]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"holidays\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [country === '' ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Are you ready?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }, this) : null, country !== '' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"holidays/favorite\",\n          className: \"favorite__button\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__heart\",\n            src: heart,\n            alt: \"heart\",\n            title: \"add me to FAV!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"header__destination\",\n          children: \"Your holidays destination is:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__country\",\n          children: country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Weather, {\n          weather: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"header__button\",\n        onClick: generateRandomCountry,\n        children: btnTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gallery, {\n      gallery: gallery,\n      country: country,\n      setGallery: setGallery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Holidays, \"fv6SatdOgpn4UUXJX6K1Gor9ylo=\");\n\n_c = Holidays;\nexport default Holidays;\n\nvar _c;\n\n$RefreshReg$(_c, \"Holidays\");","map":{"version":3,"sources":["/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Holidays.js"],"names":["React","axios","useState","useEffect","Link","Gallery","Weather","heart","countryList","require","Holidays","country","setCountry","gallery","setGallery","latitude","setLatitude","longitude","setLongitude","weather","setWeather","btnTitle","setBtnTitle","randomIntNumber","min","max","Math","floor","random","generateRandomCountry","e","preventDefault","randomInt","randomCountry","getData","name","getGallery","options","method","url","params","request","then","response","link","data","catch","error","console","getCountryData","lon","lat","getCountryWeather","countryWeather","maxTemp","parseInt","main","temp_max","minTemp","temp_min","humidity","sky"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Gallery from './Gallery/index'\nimport Weather from './Weather/index'\nimport './Holidays.css';\nimport heart from '../img/heart.png'\nconst countryList = require('country-list');\n\nconst Holidays = () => {\n  const [country, setCountry] = useState('');\n  const [gallery, setGallery] = useState([]);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [weather, setWeather] = useState({});\n  const [btnTitle, setBtnTitle] = useState('TAKE ME THERE !');\n\n  const randomIntNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n  const generateRandomCountry = (e) => {\n    e.preventDefault()\n    if (btnTitle === 'TAKE ME THERE !') {\n      setBtnTitle('TRY AGAIN !')\n    }\n    const randomInt = randomIntNumber(1, 150)\n    const randomCountry = countryList.getData()[randomInt].name;\n    setCountry(randomCountry);\n  }\n\n  const getGallery = () => {\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays/gallery',\n        params: {country: country},\n    }\n    axios.request(options)\n    .then((response) => {\n      const link = response.data;\n      setGallery(link);\n    })\n    .catch((error) => {console.error(error)})\n  }\n\n  const getCountryData = () => {\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays',\n        params: {country: country},\n    }\n    axios.request(options)\n    .then((response) => {\n      const {lon} = response.data\n      const {lat} = response.data\n      setLongitude(lon);\n      setLatitude(lat);\n    }\n      )\n    .catch((error) => {console.error(error)})\n  }\n\n  const getCountryWeather = () => {\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays/weather',\n        params: {lon: longitude, lat: latitude},\n    }\n    axios.request(options)\n    .then((response) => {\n      const countryWeather = {\n        maxTemp: parseInt(response.data.main.temp_max - 273.15),\n        minTemp: parseInt(response.data.main.temp_min -273.15),\n        humidity: response.data.main.humidity,\n        sky: response.data.weather[0].main,\n      }\n      setWeather(countryWeather);\n    })\n    .catch((error) => {console.error(error)})\n  }\n\n\n\n  useEffect(() => {\n    getCountryData()\n    getGallery()\n    getCountryWeather()\n  },[country]);\n\n  return (\n    <main className='holidays'>\n      <header className='header'>\n        {country === '' ? <h1 className='header__title'>Are you ready?</h1> : null}\n        {country !== '' ? \n          <> \n          <Link to=\"holidays/favorite\" className='favorite__button'><img className='header__heart' src={heart} alt='heart' title='add me to FAV!'/></Link>\n          <h2 className='header__destination'>Your holidays destination is:</h2>\n          <p className='header__country'>{country}</p>\n          <Weather weather={weather}/>\n          </>\n        : null}\n        <button className='header__button' onClick={generateRandomCountry}>{btnTitle}</button>\n      </header>\n      <Gallery gallery={gallery} country={country} setGallery={setGallery}/>\n    </main>\n  )\n}\n\nexport default Holidays;"]},"metadata":{},"sourceType":"module"}
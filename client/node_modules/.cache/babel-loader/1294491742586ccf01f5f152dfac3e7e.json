{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Holidays.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Gallery from './Gallery/index';\nimport Weather from './Weather/index';\nimport './Holidays.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst countryList = require('country-list');\n\nconst Holidays = () => {\n  _s();\n\n  const [country, setCountry] = useState('');\n  const [gallery, setGallery] = useState([]);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [btnTitle, setBtnTitle] = useState('TAKE ME THERE!');\n\n  const randomIntNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const generateRandomCountry = () => {\n    if (btnTitle === 'TAKE ME THERE!') {\n      setBtnTitle('TRY AGAIN!');\n    }\n\n    const randomInt = randomIntNumber(1, 150);\n    const randomCountry = countryList.getData()[randomInt].name;\n    setCountry(randomCountry);\n  }; // pass the name of country to swapiAPI\n\n\n  const getGallery = () => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays/gallery',\n      params: {\n        country: country\n      }\n    };\n    axios.request(options).then(response => {\n      const link = response.data;\n      setGallery(link);\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // pass the name of country to params of geolocation\n\n\n  const getCountryData = () => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays',\n      params: {\n        country: country\n      }\n    };\n    axios.request(options).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const getCountryWeather = () => {\n    console.log('getCountryData fetch called!');\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:8080/holidays/weather',\n      params: {\n        country: country\n      }\n    };\n    axios.request(options).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  useEffect(() => {\n    getCountryData();\n    getGallery();\n  }, [generateRandomCountry]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"holidays\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Are you ready?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"header__button\",\n        onClick: generateRandomCountry,\n        children: btnTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header__destination\",\n        children: \"Your holidays destination is..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header__country\",\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gallery, {\n      gallery: gallery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Holidays, \"LLr86t6SBo1vUMV/gKWD7iqtGgo=\");\n\n_c = Holidays;\nexport default Holidays;\n\nvar _c;\n\n$RefreshReg$(_c, \"Holidays\");","map":{"version":3,"sources":["/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Holidays.js"],"names":["React","axios","useState","useEffect","Gallery","Weather","countryList","require","Holidays","country","setCountry","gallery","setGallery","latitude","setLatitude","longitude","setLongitude","btnTitle","setBtnTitle","randomIntNumber","min","max","Math","floor","random","generateRandomCountry","randomInt","randomCountry","getData","name","getGallery","options","method","url","params","request","then","response","link","data","catch","error","console","getCountryData","log","getCountryWeather"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport Gallery from './Gallery/index'\nimport Weather from './Weather/index'\nimport './Holidays.css';\nconst countryList = require('country-list');\n\nconst Holidays = () => {\n  const [country, setCountry] = useState('');\n  const [gallery, setGallery] = useState([]);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [btnTitle, setBtnTitle] = useState('TAKE ME THERE!');\n\n  const randomIntNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n  const generateRandomCountry = () => {\n    if (btnTitle === 'TAKE ME THERE!') {\n      setBtnTitle('TRY AGAIN!')\n    }\n    const randomInt = randomIntNumber(1, 150)\n    const randomCountry = countryList.getData()[randomInt].name;\n    setCountry(randomCountry);\n  }\n\n  // pass the name of country to swapiAPI\n  const getGallery = () => {\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays/gallery',\n        params: {country: country},\n    }\n    axios.request(options)\n    .then((response) => {\n      const link = response.data;\n      setGallery(link);\n    })\n    .catch((error) => {console.error(error)})\n  }\n\n// pass the name of country to params of geolocation\n\n  const getCountryData = () => {\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays',\n        params: {country: country},\n    }\n    axios.request(options)\n    .then((response) => {console.log(response.data)})\n    .catch((error) => {console.error(error)})\n  }\n\n  const getCountryWeather = () => {\n    console.log('getCountryData fetch called!')\n    const options = {\n        method: 'GET',\n        url: 'http://localhost:8080/holidays/weather',\n        params: {country: country},\n    }\n    axios.request(options)\n    .then((response) => {console.log(response.data)})\n    .catch((error) => {console.error(error)})\n  }\n\n  useEffect(() => {\n    getCountryData()\n    getGallery()\n  }, [generateRandomCountry]);\n\n\n\n\n  return (\n    <main className='holidays'>\n      <header className='header'>\n        <h1 className='header__title'>Are you ready?</h1>\n        <button className='header__button' onClick={generateRandomCountry}>{btnTitle}</button>\n        <h2 className='header__destination'>Your holidays destination is..</h2>\n        <p className='header__country'>{country}</p>\n      </header>\n      <Weather />\n      <Gallery gallery={gallery}/>\n    </main>\n  )\n}\n\nexport default Holidays;"]},"metadata":{},"sourceType":"module"}
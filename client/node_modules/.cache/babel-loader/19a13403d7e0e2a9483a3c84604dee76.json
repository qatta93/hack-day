{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Holidays.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Gallery from './Gallery/index';\nimport Weather from './Weather/index';\nimport './Holidays.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst countryList = require('country-list');\n\nconst Holidays = () => {\n  _s();\n\n  // Get random country after clicking\n  const [country, setCountry] = useState('');\n  const [btnTitle, setBtnTitle] = useState('TAKE ME THERE!');\n\n  const randomIntNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  const generateRandomCountry = async () => {\n    if (btnTitle === 'TAKE ME THERE!') {\n      setBtnTitle('TRY AGAIN!');\n    }\n\n    await axios({\n      method: \"POST\",\n      url: \"yourAPI/customDate\",\n      data: {\n        date: this.state.date\n      },\n      withCredentials: false\n    }).then(response => {//response from your API that includes the NASA API image\n    });\n    const randomInt = randomIntNumber(1, 150);\n    const randomCountry = countryList.getData()[randomInt].name;\n    setCountry(randomCountry);\n  }; // pass the name of country to swapiAPI\n\n\n  useEffect(() => {// POST request using fetch inside useEffect React hook\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n  }, [setCountry]); //POST request with body equal on data in JSON format\n  // pass the name of country to params of geolocation\n  // read lat and lon and pass it to weather app\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"holidays\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header__title\",\n        children: \"Are you ready?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"header__button\",\n        onClick: generateRandomCountry,\n        children: btnTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header__destination\",\n        children: \"Your holidays destination is..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"header__country\",\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Gallery, {\n      country: country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Holidays, \"DGpZH/rKI0mRUMcU91l1S43J3Mg=\");\n\n_c = Holidays;\nexport default Holidays;\n\nvar _c;\n\n$RefreshReg$(_c, \"Holidays\");","map":{"version":3,"sources":["/Users/saltdev/Desktop/salt/tests/hack-day/holidays-app/client/src/components/Holidays.js"],"names":["React","useState","useEffect","Gallery","Weather","countryList","require","Holidays","country","setCountry","btnTitle","setBtnTitle","randomIntNumber","min","max","Math","floor","random","generateRandomCountry","axios","method","url","data","date","state","withCredentials","then","response","randomInt","randomCountry","getData","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,gBAAP;;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,gBAAD,CAAxC;;AAEA,QAAMW,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpC,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD,GAFD;;AAGA,QAAMK,qBAAqB,GAAG,YAAY;AACxC,QAAIR,QAAQ,KAAK,gBAAjB,EAAmC;AACjCC,MAAAA,WAAW,CAAC,YAAD,CAAX;AACD;;AACD,UAAMQ,KAAK,CAAC;AACVC,MAAAA,MAAM,EAAE,MADE;AAEVC,MAAAA,GAAG,EAAE,oBAFK;AAGVC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD;AADb,OAHI;AAMVE,MAAAA,eAAe,EAAE;AANP,KAAD,CAAL,CAOHC,IAPG,CAOGC,QAAD,IAAc,CACpB;AACD,KATK,CAAN;AAUA,UAAMC,SAAS,GAAGhB,eAAe,CAAC,CAAD,EAAI,GAAJ,CAAjC;AACA,UAAMiB,aAAa,GAAGxB,WAAW,CAACyB,OAAZ,GAAsBF,SAAtB,EAAiCG,IAAvD;AACAtB,IAAAA,UAAU,CAACoB,aAAD,CAAV;AACD,GAjBD,CARqB,CA2BrB;;;AAEA3B,EAAAA,SAAS,CAAC,MAAM,CACd;AAIJ;AACC,GANU,EAMR,CAACO,UAAD,CANQ,CAAT,CA7BqB,CAqCrB;AAGA;AAEA;;AAIA,sBACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAES,qBAA5C;AAAA,kBAAoER;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,kBAAgCF;AAAhC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1DD;;GAAMD,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport Gallery from './Gallery/index'\nimport Weather from './Weather/index'\nimport './Holidays.css';\nconst countryList = require('country-list');\n\nconst Holidays = () => {\n  // Get random country after clicking\n  const [country, setCountry] = useState('');\n  const [btnTitle, setBtnTitle] = useState('TAKE ME THERE!');\n\n  const randomIntNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n  const generateRandomCountry = async () => {\n    if (btnTitle === 'TAKE ME THERE!') {\n      setBtnTitle('TRY AGAIN!')\n    }\n    await axios({\n      method: \"POST\",\n      url: \"yourAPI/customDate\",\n      data: {\n        date: this.state.date \n      },\n      withCredentials: false\n    }).then((response) => {\n      //response from your API that includes the NASA API image\n    })\n    const randomInt = randomIntNumber(1, 150)\n    const randomCountry = countryList.getData()[randomInt].name;\n    setCountry(randomCountry);\n  }\n\n  // pass the name of country to swapiAPI\n\n  useEffect(() => {\n    // POST request using fetch inside useEffect React hook\n\n\n\n// empty dependency array means this effect will only run once (like componentDidMount in classes)\n}, [setCountry]);\n\n  //POST request with body equal on data in JSON format\n\n\n  // pass the name of country to params of geolocation\n\n  // read lat and lon and pass it to weather app\n\n\n\n  return (\n    <main className='holidays'>\n      <header className='header'>\n        <h1 className='header__title'>Are you ready?</h1>\n        <button className='header__button' onClick={generateRandomCountry}>{btnTitle}</button>\n        <h2 className='header__destination'>Your holidays destination is..</h2>\n        <p className='header__country'>{country}</p>\n      </header>\n      <Weather />\n      <Gallery country={country}/>\n    </main>\n  )\n}\n\nexport default Holidays;"]},"metadata":{},"sourceType":"module"}